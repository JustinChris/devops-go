name: deploy

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - 'config-example/**'
      - '.github/workflows/deploy-workflow.yaml'
  workflow_dispatch:
    input:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - staging
          - production
        default: 'staging'

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Run replacer
        working-directory: yaml-replacer
        run: | 
          if [[ ${{ github.event_name }} == 'push' || ${{ github.event_name }} == 'workflow_dispatch' && ${{ github.event.inputs.environment }} == 'staging']]; then
            go run yaml-replacer.go -key database -dir config-example/apps -value $(awk '/^hosts:/{print $2}' config-example/dbs/db_stg.yaml)
          elif [[ ${{ github.event_name }} == 'workflow_dispatch' && ${{ github.event.inputs.environment }} == 'production' ]]; then
            go run yaml-replacer.go -key database -dir config-example/apps -value $(awk '/^hosts:/{print $2}' config-example/dbs/db_prod.yaml)
          else
            echo "Unsupported event or environment"
            exit 1
          fi

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          sudo apt-get install zip -y
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_SECRET_REGION }}

      - name: deploy configuration
        run: scp -r config-example ubuntu@ip-172-31-24-232:/
